{"version":3,"file":"main.js","sources":["../src/data/crData.ts","../src/services/CRCalculatorService.ts","../src/ui/CRCalculatorDialog.ts","../src/main.ts"],"sourcesContent":["/**\n * Challenge Rating data structures and tables from the D&D 5e Dungeon Master's Guide\n */\n\nexport interface ChallengeRating {\n  cr: number;\n  xp: number;\n  prof_bonus: number;\n  armor_class: number;\n  hit_points_min: number;\n  hit_points_max: number;\n  attack_bonus: number;\n  damage_min: number;\n  damage_max: number;\n  save_dc: number;\n}\n\nexport const challengeRatings: ChallengeRating[] = [\n  {\n    cr: 0,\n    xp: 10,\n    prof_bonus: 2,\n    armor_class: 13,\n    hit_points_min: 1,\n    hit_points_max: 6,\n    attack_bonus: 3,\n    damage_min: 0,\n    damage_max: 1,\n    save_dc: 13,\n  },\n  {\n    cr: 0.125,\n    xp: 25,\n    prof_bonus: 2,\n    armor_class: 13,\n    hit_points_min: 7,\n    hit_points_max: 35,\n    attack_bonus: 3,\n    damage_min: 0,\n    damage_max: 3,\n    save_dc: 13,\n  },\n  {\n    cr: 0.25,\n    xp: 50,\n    prof_bonus: 2,\n    armor_class: 13,\n    hit_points_min: 36,\n    hit_points_max: 49,\n    attack_bonus: 3,\n    damage_min: 0,\n    damage_max: 5,\n    save_dc: 13,\n  },\n  {\n    cr: 0.5,\n    xp: 100,\n    prof_bonus: 2,\n    armor_class: 13,\n    hit_points_min: 50,\n    hit_points_max: 70,\n    attack_bonus: 3,\n    damage_min: 0,\n    damage_max: 8,\n    save_dc: 13,\n  },\n  {\n    cr: 1,\n    xp: 200,\n    prof_bonus: 2,\n    armor_class: 13,\n    hit_points_min: 71,\n    hit_points_max: 85,\n    attack_bonus: 3,\n    damage_min: 9,\n    damage_max: 14,\n    save_dc: 13,\n  },\n  {\n    cr: 2,\n    xp: 450,\n    prof_bonus: 2,\n    armor_class: 13,\n    hit_points_min: 86,\n    hit_points_max: 100,\n    attack_bonus: 3,\n    damage_min: 15,\n    damage_max: 20,\n    save_dc: 13,\n  },\n  {\n    cr: 3,\n    xp: 700,\n    prof_bonus: 2,\n    armor_class: 13,\n    hit_points_min: 101,\n    hit_points_max: 115,\n    attack_bonus: 4,\n    damage_min: 21,\n    damage_max: 26,\n    save_dc: 13,\n  },\n  {\n    cr: 4,\n    xp: 1100,\n    prof_bonus: 2,\n    armor_class: 14,\n    hit_points_min: 116,\n    hit_points_max: 130,\n    attack_bonus: 5,\n    damage_min: 27,\n    damage_max: 32,\n    save_dc: 14,\n  },\n  {\n    cr: 5,\n    xp: 1800,\n    prof_bonus: 3,\n    armor_class: 15,\n    hit_points_min: 131,\n    hit_points_max: 145,\n    attack_bonus: 6,\n    damage_min: 33,\n    damage_max: 38,\n    save_dc: 15,\n  },\n  {\n    cr: 6,\n    xp: 2300,\n    prof_bonus: 3,\n    armor_class: 15,\n    hit_points_min: 146,\n    hit_points_max: 160,\n    attack_bonus: 6,\n    damage_min: 39,\n    damage_max: 44,\n    save_dc: 15,\n  },\n  {\n    cr: 7,\n    xp: 2900,\n    prof_bonus: 3,\n    armor_class: 15,\n    hit_points_min: 161,\n    hit_points_max: 175,\n    attack_bonus: 6,\n    damage_min: 45,\n    damage_max: 50,\n    save_dc: 15,\n  },\n  {\n    cr: 8,\n    xp: 3900,\n    prof_bonus: 3,\n    armor_class: 16,\n    hit_points_min: 176,\n    hit_points_max: 190,\n    attack_bonus: 7,\n    damage_min: 51,\n    damage_max: 56,\n    save_dc: 16,\n  },\n  {\n    cr: 9,\n    xp: 5000,\n    prof_bonus: 4,\n    armor_class: 16,\n    hit_points_min: 191,\n    hit_points_max: 205,\n    attack_bonus: 7,\n    damage_min: 57,\n    damage_max: 62,\n    save_dc: 16,\n  },\n  {\n    cr: 10,\n    xp: 5900,\n    prof_bonus: 4,\n    armor_class: 17,\n    hit_points_min: 206,\n    hit_points_max: 220,\n    attack_bonus: 7,\n    damage_min: 63,\n    damage_max: 68,\n    save_dc: 16,\n  },\n  {\n    cr: 11,\n    xp: 7200,\n    prof_bonus: 4,\n    armor_class: 17,\n    hit_points_min: 221,\n    hit_points_max: 235,\n    attack_bonus: 8,\n    damage_min: 69,\n    damage_max: 74,\n    save_dc: 17,\n  },\n  {\n    cr: 12,\n    xp: 8400,\n    prof_bonus: 4,\n    armor_class: 17,\n    hit_points_min: 236,\n    hit_points_max: 250,\n    attack_bonus: 8,\n    damage_min: 75,\n    damage_max: 80,\n    save_dc: 18,\n  },\n  {\n    cr: 13,\n    xp: 10000,\n    prof_bonus: 5,\n    armor_class: 18,\n    hit_points_min: 251,\n    hit_points_max: 265,\n    attack_bonus: 8,\n    damage_min: 81,\n    damage_max: 86,\n    save_dc: 18,\n  },\n  {\n    cr: 14,\n    xp: 11500,\n    prof_bonus: 5,\n    armor_class: 18,\n    hit_points_min: 266,\n    hit_points_max: 280,\n    attack_bonus: 8,\n    damage_min: 87,\n    damage_max: 92,\n    save_dc: 18,\n  },\n  {\n    cr: 15,\n    xp: 13000,\n    prof_bonus: 5,\n    armor_class: 18,\n    hit_points_min: 281,\n    hit_points_max: 295,\n    attack_bonus: 8,\n    damage_min: 93,\n    damage_max: 98,\n    save_dc: 18,\n  },\n  {\n    cr: 16,\n    xp: 15000,\n    prof_bonus: 5,\n    armor_class: 18,\n    hit_points_min: 296,\n    hit_points_max: 310,\n    attack_bonus: 9,\n    damage_min: 99,\n    damage_max: 104,\n    save_dc: 18,\n  },\n  {\n    cr: 17,\n    xp: 18000,\n    prof_bonus: 6,\n    armor_class: 19,\n    hit_points_min: 311,\n    hit_points_max: 325,\n    attack_bonus: 10,\n    damage_min: 105,\n    damage_max: 110,\n    save_dc: 19,\n  },\n  {\n    cr: 18,\n    xp: 20000,\n    prof_bonus: 6,\n    armor_class: 19,\n    hit_points_min: 326,\n    hit_points_max: 340,\n    attack_bonus: 10,\n    damage_min: 111,\n    damage_max: 116,\n    save_dc: 19,\n  },\n  {\n    cr: 19,\n    xp: 22000,\n    prof_bonus: 6,\n    armor_class: 19,\n    hit_points_min: 341,\n    hit_points_max: 355,\n    attack_bonus: 10,\n    damage_min: 117,\n    damage_max: 122,\n    save_dc: 19,\n  },\n  {\n    cr: 20,\n    xp: 25000,\n    prof_bonus: 6,\n    armor_class: 19,\n    hit_points_min: 356,\n    hit_points_max: 400,\n    attack_bonus: 10,\n    damage_min: 123,\n    damage_max: 140,\n    save_dc: 19,\n  },\n  {\n    cr: 21,\n    xp: 33000,\n    prof_bonus: 7,\n    armor_class: 19,\n    hit_points_min: 401,\n    hit_points_max: 445,\n    attack_bonus: 11,\n    damage_min: 141,\n    damage_max: 158,\n    save_dc: 20,\n  },\n  {\n    cr: 22,\n    xp: 41000,\n    prof_bonus: 7,\n    armor_class: 19,\n    hit_points_min: 446,\n    hit_points_max: 490,\n    attack_bonus: 11,\n    damage_min: 159,\n    damage_max: 176,\n    save_dc: 20,\n  },\n  {\n    cr: 23,\n    xp: 50000,\n    prof_bonus: 7,\n    armor_class: 19,\n    hit_points_min: 491,\n    hit_points_max: 535,\n    attack_bonus: 11,\n    damage_min: 177,\n    damage_max: 194,\n    save_dc: 20,\n  },\n  {\n    cr: 24,\n    xp: 62000,\n    prof_bonus: 7,\n    armor_class: 19,\n    hit_points_min: 536,\n    hit_points_max: 580,\n    attack_bonus: 11,\n    damage_min: 195,\n    damage_max: 212,\n    save_dc: 21,\n  },\n  {\n    cr: 25,\n    xp: 75000,\n    prof_bonus: 8,\n    armor_class: 19,\n    hit_points_min: 581,\n    hit_points_max: 625,\n    attack_bonus: 12,\n    damage_min: 213,\n    damage_max: 230,\n    save_dc: 21,\n  },\n  {\n    cr: 26,\n    xp: 90000,\n    prof_bonus: 8,\n    armor_class: 19,\n    hit_points_min: 626,\n    hit_points_max: 670,\n    attack_bonus: 12,\n    damage_min: 231,\n    damage_max: 248,\n    save_dc: 21,\n  },\n  {\n    cr: 27,\n    xp: 105000,\n    prof_bonus: 8,\n    armor_class: 19,\n    hit_points_min: 671,\n    hit_points_max: 715,\n    attack_bonus: 13,\n    damage_min: 249,\n    damage_max: 266,\n    save_dc: 22,\n  },\n  {\n    cr: 28,\n    xp: 120000,\n    prof_bonus: 8,\n    armor_class: 19,\n    hit_points_min: 716,\n    hit_points_max: 760,\n    attack_bonus: 13,\n    damage_min: 267,\n    damage_max: 284,\n    save_dc: 22,\n  },\n  {\n    cr: 29,\n    xp: 135000,\n    prof_bonus: 9,\n    armor_class: 19,\n    hit_points_min: 760,\n    hit_points_max: 805,\n    attack_bonus: 13,\n    damage_min: 285,\n    damage_max: 302,\n    save_dc: 22,\n  },\n  {\n    cr: 30,\n    xp: 155000,\n    prof_bonus: 9,\n    armor_class: 19,\n    hit_points_min: 805,\n    hit_points_max: 850,\n    attack_bonus: 14,\n    damage_min: 303,\n    damage_max: 320,\n    save_dc: 23,\n  },\n];\n\n/**\n * Special monster features that provide defensive bonuses\n * Based on DMG Chapter 9: Creating a Monster\n */\nexport const monsterFeatures: string[] = [\n  'Aggressive',\n  'Ambusher',\n  'Angelic Weapons',\n  'Avoidance',\n  'Blood Frenzy',\n  'Constrict',\n  'Damage Transfer',\n  'Enlarge',\n  'Frightful Presence',\n  'Heated Body',\n  'Horrifying Visage',\n  'Legendary Resistance',\n  'Magic Resistance',\n  'Martial Advantage',\n  'Nimble Escape',\n  'Pack Tactics',\n  'Parry',\n  'Possession',\n  'Regeneration',\n  'Relentless',\n  'Shadow Stealth',\n  'Stench',\n  'Superior Invisibility',\n  'Undead Fortitude',\n  'Web',\n];\n","import { challengeRatings, monsterFeatures } from '../data/crData.js';\n\n/**\n * Result of a CR calculation for display in the dialog\n */\nexport interface CRCalculationResult {\n  actorName: string;\n  originalCR: number;\n  calculatedCR: number;\n  defensiveCR: number;\n  offensiveCR: number;\n  defensiveBreakdown: {\n    hp: number;\n    ac: number;\n    immunities: number;\n    resistances: number;\n    vulnerabilities: number;\n    monsterFeatures: string[];\n  };\n  offensiveBreakdown: {\n    dpr: number;\n    numAttacks: number;\n    attackBonus: number;\n    spellSaveDC: number;\n    numFeats: number;\n    detectedWeapons: string[];\n  };\n}\n\n/**\n * Damage calculation intermediate result\n */\ninterface DamageCalculation {\n  numAttacks: number;\n  attackBonus: number;\n  dpr: number;\n}\n\nexport class CRCalculatorService {\n  static ID = 'fvtt-challenge-calculator';\n\n  static FLAGS = {\n    TODOS: 'cr-calc',\n  };\n\n  /**\n   * Calculate CR for an actor and optionally update it\n   * @param actor The actor document\n   * @param updateActor Whether to update the actor's CR\n   * @returns The calculation result\n   */\n  static async calculateCRForActor(\n    actor: any,\n    updateActor: boolean = true,\n  ): Promise<CRCalculationResult> {\n    // Build data object from actor (v13 compatibility)\n    const data = {\n      actor,\n      items: Array.from(actor.items),\n    };\n\n    const defensiveResult = this.calculateDefensiveCR(actor, data);\n    const offensiveResult = this.calculateOffensiveCR(actor, data);\n\n    let rawCR = (offensiveResult.cr + defensiveResult.cr) / 2;\n\n    // Round fractional CRs\n    if (rawCR > 0 && rawCR < 0.1875) {\n      rawCR = 0.125;\n    } else if (rawCR >= 0.1875 && rawCR < 0.5) {\n      rawCR = 0.25;\n    } else if (rawCR >= 0.5 && rawCR < 1) {\n      rawCR = 0.5;\n    } else if (rawCR >= 1 && rawCR < 1.5) {\n      rawCR = 1;\n    }\n\n    const cRating = rawCR > 1 ? Math.round(rawCR) : rawCR;\n    const finalCR = cRating >= 0 ? cRating : 0;\n\n    if (updateActor) {\n      await actor.update({\n        system: {\n          details: {\n            cr: finalCR,\n          },\n        },\n      });\n\n      ui.notifications?.info(\n        `CR updated for ${actor.name} to ${finalCR}, Offensive CR: ${offensiveResult.cr}, Defensive CR: ${defensiveResult.cr}`,\n        { permanent: false },\n      );\n    }\n\n    // Return detailed calculation result for dialog\n    return {\n      actorName: actor.name,\n      originalCR: actor.system.details.cr,\n      calculatedCR: finalCR,\n      defensiveCR: defensiveResult.cr,\n      offensiveCR: offensiveResult.cr,\n      defensiveBreakdown: defensiveResult.breakdown,\n      offensiveBreakdown: offensiveResult.breakdown,\n    };\n  }\n\n  /**\n   * Calculate offensive CR based on damage output and attack bonuses\n   */\n  private static calculateOffensiveCR(\n    actor: any,\n    data: any,\n  ): {\n    cr: number;\n    breakdown: {\n      dpr: number;\n      numAttacks: number;\n      attackBonus: number;\n      spellSaveDC: number;\n      numFeats: number;\n      detectedWeapons: string[];\n    };\n  } {\n    let spellSaveDC = 0;\n    if (actor.system.attributes.spellcasting && actor.system.attributes.spellcasting !== '') {\n      const castingAbilityMod = actor.system.abilities[actor.system.attributes.spellcasting].mod;\n      const spellLevelCR = challengeRatings.find(\n        (crObj) => crObj.cr === actor.system.details.spellLevel,\n      );\n      if (spellLevelCR) {\n        spellSaveDC = 8 + castingAbilityMod + spellLevelCR.prof_bonus;\n      }\n    }\n\n    const numFeats = data.items.filter((item: any) => item.type === 'feat').length;\n    const featsBonus = numFeats > 0 ? numFeats / 3 : 0;\n\n    let damageBonus = actor.system.abilities.str.mod;\n    let numAttacks = 1;\n    let attackBonus = actor.system.abilities.str.mod;\n\n    const damageCalc = this.calculateDamagePerRound(\n      data,\n      numAttacks,\n      actor,\n      attackBonus,\n      damageBonus,\n    );\n    numAttacks = damageCalc.numAttacks;\n    attackBonus = damageCalc.attackBonus;\n    const dpr = damageCalc.dpr;\n\n    let attackBonusCR = 0;\n    let spellCastingCR = 0;\n\n    challengeRatings.forEach((chall) => {\n      if (dpr >= chall.damage_min && dpr <= chall.damage_max) {\n        const attBonusMod = (attackBonus + chall.prof_bonus - chall.attack_bonus) / 2;\n        attackBonusCR = chall.cr + attBonusMod + featsBonus;\n      }\n      if (spellSaveDC === chall.save_dc && spellCastingCR === 0) {\n        spellCastingCR = chall.cr + featsBonus;\n      }\n    });\n\n    // Get weapon names for display (v13 uses damage.base instead of damage.parts)\n    const detectedWeapons = data.items\n      .filter(\n        (item: any) => item.system.damage && item.system.damage.base && item.system.damage.base.formula\n      )\n      .map((item: any) => item.name);\n\n    return {\n      cr: Math.max(attackBonusCR, spellCastingCR),\n      breakdown: {\n        dpr,\n        numAttacks,\n        attackBonus,\n        spellSaveDC,\n        numFeats,\n        detectedWeapons,\n      },\n    };\n  }\n\n  /**\n   * Calculate damage per round from actor's weapons and attacks\n   */\n  private static calculateDamagePerRound(\n    data: any,\n    numAttacks: number,\n    actor: any,\n    attackBonus: number,\n    damageBonus: number,\n  ): DamageCalculation {\n    // Check for Multiattack feature\n    const multiAttackItem = data.items.find((item: any) => {\n      if (item.name === 'Multiattack') {\n        // v13 might use description.value or just description\n        const descValue = item.system.description?.value || item.system.description || '';\n        const multiAttackDesc = descValue\n          .replace('two', '2')\n          .replace('three', '3')\n          .replace('four', '4')\n          .replace('five', '5')\n          .replace('six', '6')\n          .replace('seven', '7')\n          .replace('eight', '8');\n        const multiRegex = /^[^\\d]*(\\d+)/g;\n        const result = multiRegex.exec(multiAttackDesc);\n        if (result && result.length > 1 && result[1]) {\n          numAttacks = parseInt(result[1]);\n        }\n        return true;\n      }\n      return false;\n    });\n\n    const isMulti = !!multiAttackItem;\n\n    let damagesArray: number[] = [];\n    // v13: Check for damage.base.formula instead of damage.parts\n    const offensiveItems = data.items.filter(\n      (item: any) =>\n        item.system.damage && item.system.damage.base && item.system.damage.base.formula,\n    );\n\n    offensiveItems.forEach((item: any) => {\n      try {\n        // v13: damage is now in damage.base and damage.versatile\n        const damages = [];\n        if (item.system.damage.base && item.system.damage.base.formula) {\n          damages.push([item.system.damage.base.formula, item.system.damage.base.types?.[0] || '']);\n        }\n        // Optionally include versatile damage if it exists\n        if (item.system.damage.versatile && item.system.damage.versatile.formula) {\n          damages.push([item.system.damage.versatile.formula, item.system.damage.versatile.types?.[0] || '']);\n        }\n\n        // v13: properties might be a Set instead of an object\n        const hasFinesseProperty = item.system.properties instanceof Set\n          ? item.system.properties.has('fin')\n          : 'fin' in (item.system.properties || {});\n\n        const atkBonus =\n          hasFinesseProperty && actor.system.abilities.dex.mod > actor.system.abilities.str.mod\n            ? actor.system.abilities.dex.mod\n            : attackBonus;\n        attackBonus = atkBonus > attackBonus ? atkBonus : attackBonus;\n\n        const dmgBonus =\n          hasFinesseProperty && actor.system.abilities.dex.mod > actor.system.abilities.str.mod\n            ? actor.system.abilities.dex.mod\n            : damageBonus;\n        damageBonus = dmgBonus > damageBonus ? dmgBonus : damageBonus;\n\n        const isFeat = item.type === 'feat';\n\n        if (damages.length > 0) {\n          let dprResult = 0;\n          damages.forEach((dam: any) => {\n            if (dam.length > 0) {\n              const diceRegex =\n                /(\\d*)[dD](\\d*)(([+*-](?:\\d+|\\@mod|\\([a-zA-Z]*\\)))*)(\\[+-](\\d*))?/gm;\n              const dieStr = dam[0].replace(/\\s/g, '').replace(/\\[.*\\]/g, '');\n              const damageDice = diceRegex.exec(dieStr);\n              const useDiceMod = dieStr.includes('@mod');\n\n              if (damageDice && damageDice.length > 4) {\n                const diceNum = damageDice[1] === '' ? 1 : parseInt(damageDice[1]);\n                const diceValue = damageDice[2] === '' ? 1 : parseInt(damageDice[2]);\n                const diceModifier =\n                  damageDice[4] && damageDice[4] !== '+@mod' ? parseInt(damageDice[4]) : 0;\n\n                if (diceModifier + attackBonus > attackBonus) {\n                  attackBonus = diceModifier + attackBonus;\n                }\n\n                const baseDam =\n                  isMulti && !isFeat\n                    ? ((diceNum * diceValue) / 2) * numAttacks\n                    : (diceNum * diceValue) / 2;\n\n                dprResult += baseDam + diceModifier;\n                if (useDiceMod) {\n                  dprResult += damageBonus;\n                }\n              }\n            }\n          });\n          damagesArray.push(dprResult);\n        }\n      } catch (e) {\n        console.error(e);\n        ChatMessage.create({\n          speaker: ChatMessage.getSpeaker(),\n          content: `<h3 style=\"color: red;\">Challenge Rating Calculator - ERROR</h3>\n                <h4>Error calculating Item Damage for <strong>\"${item.name}\"</strong></h4>\n                <p><code>${e}</code></p>\n                <p>Please report errors <a href=\"https://github.com/jesshmusic/fvtt-challenge-calculator/issues\">here</a> with a screenshot of this message. </p>`,\n          whisper: [game.user?.id].filter(Boolean) as string[],\n        } as any);\n\n        ui.notifications?.error(`Error calculating Item Damage for \"${item.name}\": ${e}`, {\n          permanent: true,\n        });\n      }\n    });\n\n    damagesArray = damagesArray.sort((a, b) => b - a);\n    if (damagesArray.length > 2) {\n      damagesArray = damagesArray.slice(0, 3);\n    }\n\n    const dpr =\n      damagesArray.length > 0 ? damagesArray.reduce((a, b) => a + b) / damagesArray.length : 0;\n\n    return { numAttacks, attackBonus, dpr };\n  }\n\n  /**\n   * Calculate defensive CR based on HP, AC, and defensive abilities\n   */\n  private static calculateDefensiveCR(\n    actor: any,\n    data: any,\n  ): {\n    cr: number;\n    breakdown: {\n      hp: number;\n      ac: number;\n      immunities: number;\n      resistances: number;\n      vulnerabilities: number;\n      monsterFeatures: string[];\n    };\n  } {\n    const immunBonus = actor.system.traits.di.value.size * 2;\n    const resistBonus = actor.system.traits.dr.value.size;\n    const vulnPenalty = -1 * actor.system.traits.dv.value.size;\n\n    const detectedMonsterFeatures = data.items\n      .filter((item: any) => monsterFeatures.indexOf(item.name) > -1)\n      .map((item: any) => item.name);\n\n    const monsterFeatureCount = detectedMonsterFeatures.length;\n\n    const ac = actor.system.attributes.ac.value;\n    const hp = actor.system.attributes.hp.max;\n\n    let defensiveCR = 0;\n    challengeRatings.forEach((chall) => {\n      if (hp >= chall.hit_points_min && hp <= chall.hit_points_max) {\n        const attBonusMod = (ac - chall.armor_class) / 2;\n        defensiveCR =\n          chall.cr + attBonusMod + immunBonus + resistBonus + vulnPenalty + monsterFeatureCount;\n      }\n    });\n\n    return {\n      cr: defensiveCR,\n      breakdown: {\n        hp,\n        ac,\n        immunities: actor.system.traits.di.value.size,\n        resistances: actor.system.traits.dr.value.size,\n        vulnerabilities: actor.system.traits.dv.value.size,\n        monsterFeatures: detectedMonsterFeatures,\n      },\n    };\n  }\n}\n","import { CRCalculationResult } from '../services/CRCalculatorService.js';\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = (foundry as any).applications.api;\n\n/**\n * Dialog displaying detailed CR calculation results using ApplicationV2\n */\nexport class CRCalculatorDialog extends HandlebarsApplicationMixin(ApplicationV2) {\n  private result: CRCalculationResult;\n  private actor: any;\n\n  constructor(result: CRCalculationResult, actor: any) {\n    super({});\n    this.result = result;\n    this.actor = actor;\n  }\n\n  static DEFAULT_OPTIONS = {\n    id: 'cr-calculator-dialog',\n    classes: ['cr-calculator', 'dnd5e2', 'sheet'],\n    tag: 'div',\n    window: {\n      title: 'CR Calculator Results',\n      icon: 'fas fa-calculator',\n      resizable: true,\n    },\n    position: {\n      width: 600,\n      height: 'auto' as const,\n    },\n    actions: {\n      apply: CRCalculatorDialog.onApplyCR,\n      close: CRCalculatorDialog.onClose,\n    },\n  };\n\n  static PARTS = {\n    form: {\n      template: 'modules/fvtt-challenge-calculator/templates/cr-calculator-results.html',\n    },\n  };\n\n  /**\n   * Prepare context data for the Handlebars template\n   */\n  async _prepareContext(_options: any): Promise<any> {\n    const result = this.result;\n    const crChanged = result.originalCR !== result.calculatedCR;\n    const crIncrease = result.calculatedCR > result.originalCR;\n\n    return {\n      actorName: result.actorName,\n      originalCR: this.formatCR(result.originalCR),\n      calculatedCR: this.formatCR(result.calculatedCR),\n      crChanged,\n      crIncrease,\n      defensiveCR: this.formatCR(result.defensiveCR),\n      offensiveCR: this.formatCR(result.offensiveCR),\n      defensive: {\n        hp: result.defensiveBreakdown.hp,\n        ac: result.defensiveBreakdown.ac,\n        immunities: result.defensiveBreakdown.immunities,\n        resistances: result.defensiveBreakdown.resistances,\n        vulnerabilities: result.defensiveBreakdown.vulnerabilities,\n        monsterFeatures: result.defensiveBreakdown.monsterFeatures,\n        hasFeatures: result.defensiveBreakdown.monsterFeatures.length > 0,\n      },\n      offensive: {\n        dpr: Math.round(result.offensiveBreakdown.dpr * 10) / 10,\n        numAttacks: result.offensiveBreakdown.numAttacks,\n        attackBonus: this.formatBonus(result.offensiveBreakdown.attackBonus),\n        spellSaveDC: result.offensiveBreakdown.spellSaveDC || null,\n        hasSpells: result.offensiveBreakdown.spellSaveDC > 0,\n        numFeats: result.offensiveBreakdown.numFeats,\n        detectedWeapons: result.offensiveBreakdown.detectedWeapons,\n        hasWeapons: result.offensiveBreakdown.detectedWeapons.length > 0,\n      },\n    };\n  }\n\n  /**\n   * Format CR value for display (handles fractional CRs)\n   */\n  private formatCR(cr: number): string {\n    if (cr === 0.125) return '1/8';\n    if (cr === 0.25) return '1/4';\n    if (cr === 0.5) return '1/2';\n    return cr.toString();\n  }\n\n  /**\n   * Format bonus with + or - sign\n   */\n  private formatBonus(bonus: number): string {\n    return bonus >= 0 ? `+${bonus}` : bonus.toString();\n  }\n\n  /**\n   * Apply the calculated CR to the actor\n   */\n  static async onApplyCR(\n    this: CRCalculatorDialog,\n    _event: Event,\n    _target: HTMLElement,\n  ): Promise<void> {\n    await this.actor.update({\n      system: {\n        details: {\n          cr: this.result.calculatedCR,\n        },\n      },\n    });\n\n    ui.notifications?.info(\n      `CR updated for ${this.result.actorName} to ${this.result.calculatedCR}`,\n      { permanent: false },\n    );\n\n    this.close();\n  }\n\n  /**\n   * Close the dialog without applying\n   */\n  static async onClose(this: CRCalculatorDialog, _event: Event, _target: HTMLElement): Promise<void> {\n    this.close();\n  }\n}\n","import { CRCalculatorService } from './services/CRCalculatorService.js';\nimport { CRCalculatorDialog } from './ui/CRCalculatorDialog.js';\nimport packageInfo from '../package.json';\nimport buildInfo from '../build-info.json';\n\n/**\n * Check if the CR button should be shown for this actor\n * Only shows for default dnd5e NPC sheets when user is GM\n */\nconst shouldShowCRButton = (actorObject: any): boolean => {\n  if (actorObject.type === 'npc') {\n    if (\n      (!actorObject.flags || Object.keys(actorObject.flags).length === 0) &&\n      (game.user?.isGM || (game.user as any)?.isTheGM)\n    ) {\n      return true;\n    } else if (\n      (!actorObject.flags.core?.sheetClass ||\n        actorObject.flags.core.sheetClass === '' ||\n        actorObject.flags.core.sheetClass === 'dnd5e.ActorSheet5eNPC' ||\n        actorObject.flags.core.sheetClass === 'dnd5e.ActorSheet5eNPC2') &&\n      game.user?.isGM\n    ) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Module initialization\n */\nHooks.once('init', async function () {\n  console.log(\n    \"%c⚔️ Dorman Lakely's 5e CR Calculator %cv\" + packageInfo.version + \" %c(build \" + buildInfo.buildNumber + \")\",\n    'color: #d32f2f; font-weight: bold; font-size: 16px;',\n    'color: #ff9800; font-weight: bold; font-size: 14px;',\n    'color: #ffeb3b; font-weight: normal; font-size: 12px;'\n  );\n});\n\nHooks.once('ready', async function () {\n  console.log(\n    \"%c⚔️ Dorman Lakely's 5e CR Calculator %c✓ Ready!\",\n    'color: #d32f2f; font-weight: bold; font-size: 16px;',\n    'color: #4caf50; font-weight: bold; font-size: 14px;'\n  );\n});\n\n/**\n * Add CR Calculator button to NPC actor sheets\n * v13 ApplicationV2 uses: render<ClassName>\n */\n\n// Try all possible v13 hook names\nconst hookNames = [\n  'renderNPCActorSheet',           // v13 ApplicationV2 name\n  'renderdnd5e.NPCActorSheet',     // With module prefix\n  'renderActorSheet5eNPC2',        // Legacy name\n  'renderActorSheet',              // v12 fallback\n];\n\nhookNames.forEach(hookName => {\n  Hooks.on(hookName, (app: any, html: JQuery | HTMLElement, data?: any) => {\n    // Get actor object (v13 uses app.document, v12 uses app.object)\n    const actor = app.document || app.object || app.actor;\n\n    if (!actor) {\n      return;\n    }\n\n    if (!shouldShowCRButton(actor)) {\n      return;\n    }\n\n    // Get the HTML element (v13 passes HTMLElement, v12 passes jQuery)\n    const sheetElement = html instanceof HTMLElement ? html : html[0];\n\n    if (!sheetElement) {\n      return;\n    }\n\n    // Find the header section - try multiple selectors for different sheet versions\n    // v13: .window-header .header-elements (in window header)\n    // v12: .header-details.flexrow (in sheet body)\n    let headerDetails = sheetElement.querySelector('.window-header .header-elements');\n\n    if (!headerDetails) {\n      // Fallback to v12 selector\n      headerDetails = sheetElement.querySelector('.header-details.flexrow');\n    }\n\n    if (!headerDetails) {\n      return;\n    }\n\n    // Check if button already exists to prevent duplicates\n    if (headerDetails.querySelector('.cr-calc-button')) {\n      return;\n    }\n\n    // Get localized tooltip text\n    const tooltip = game.i18n?.localize('CR-CALC.button-calc') || 'Calculate CR';\n\n    // Create button element\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.className = 'cr-calc-button';\n    button.title = tooltip;\n    button.innerHTML = '<i class=\"fas fa-calculator\"></i>&nbsp; CR Calc';\n\n    // Add click handler\n    button.addEventListener('click', async (event: Event) => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      try {\n        // Calculate CR without updating actor (dialog will handle that)\n        const result = await CRCalculatorService.calculateCRForActor(actor, false);\n\n        // Show dialog with results\n        const dialog = new CRCalculatorDialog(result, actor);\n        dialog.render(true);\n      } catch (error) {\n        console.error('CR Calculator: Error calculating CR', error);\n        ui.notifications?.error(\n          `Error calculating CR: ${error instanceof Error ? error.message : 'Unknown error'}`,\n          { permanent: true }\n        );\n      }\n    });\n\n    // Append button to header\n    headerDetails.appendChild(button);\n  });\n});\n"],"names":[],"mappings":"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"}